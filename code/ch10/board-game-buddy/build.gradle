plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.10-SNAPSHOT'

java {
    sourceCompatibility = '23'
}

repositories {
    mavenCentral()
}

ext {
    set('springAiVersion', "1.0.0-M6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    implementation 'org.springframework.ai:spring-ai-qdrant-store-spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // Docker compose
    runtimeOnly 'org.springframework.boot:spring-boot-docker-compose'

    // persistence
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    runtimeOnly 'com.h2database:h2'

    // observability
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // tracing - needed for both Jaeger and Zipkin
     implementation 'io.micrometer:micrometer-tracing-bridge-otel'

    // needed for Jaeger
    implementation 'io.opentelemetry:opentelemetry-exporter-otlp'

    // needed for Zipkin
    implementation 'io.opentelemetry:opentelemetry-exporter-zipkin'

    // testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.ai:spring-ai-spring-boot-testcontainers'
    testImplementation 'org.testcontainers:qdrant'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
